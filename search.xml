<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Bomb后端云的API安全码</title>
    <url>/z_post/Bomb%E4%BA%91%E7%9A%84API%E5%AE%89%E5%85%A8%E7%A0%81/</url>
    <content><![CDATA[<p>最近又用了Bomb云，按照文档要求初始化时需要Secret Key和API安全码，因为我已经连续两次忘记API安全码是个什么东西了，所以我决定记录一下。</p>
<p><img src="https://img-blog.csdnimg.cn/20200619231006987.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="Bomb后端云初始化"></p>
<a id="more"></a>

<p>首先Secret Key非常好找，打开应用Key就能看见<br><img src="https://img-blog.csdnimg.cn/20200619231157449.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="打开应用key"><br><img src="https://img-blog.csdnimg.cn/20200619231302225.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="应用秘钥"><br>同时我下意识地以为，API安全码也是这其中的一个，但是挨边试过都不对，最后才想到在这个地方：<br><img src="https://img-blog.csdnimg.cn/20200619231407327.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="API安全码"><br>而且文档中专门在代码下面标注了这个位置，我真是太蠢了，以后看文档得仔细一点…</p>
]]></content>
      <tags>
        <tag>Bomb后端云</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo静态博客部署到GitHub访问乱版问题的解决</title>
    <url>/z_post/Hexo%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0GitHub%E8%AE%BF%E9%97%AE%E4%B9%B1%E7%89%88%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<p>今天选了好久Hexo的皮肤，本地预览也没有任何问题，结果部署到GitHub再打开就一下乱版了<br><img src="https://img-blog.csdnimg.cn/20200616133119520.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="乱版情况"></p>
<a id="more"></a>

<h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><ol>
<li><a href="#title1">问题描述</a></li>
<li><a href="#title2">解决方案</a></li>
</ol>
<h5 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a><span id="title1">问题描述：</span></h5><p>下面是对比图：</p>
<p>本地预览 ↓<br><img src="https://img-blog.csdnimg.cn/20200616133002176.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="本地预览图"><br>部署后的效果 ↓<br><img src="https://img-blog.csdnimg.cn/20200616133119520.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="部署后的效果"><br>瞬间心都碎了有没有！</p>
<h5 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a><span id="title2">解决方案：</span></h5><p>搜来搜去也不知道是怎么回事，突然我想到我访问GitHub也一直有类似的情况（比如图片加载不出来，访问速度缓慢等等），会不会是这个原因导致的。<br>之前我访问GitHub的情况 ↓<br>![GitHub]](<a href="https://img-blog.csdnimg.cn/20200616133318134.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" target="_blank" rel="noopener">https://img-blog.csdnimg.cn/20200616133318134.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70</a>)<br>于是我按照网上的做法修改了host文件，具体操作如下：<br>在系统目录：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Windows\System32\drivers\etc\hosts</span><br></pre></td></tr></table></figure>
<p>用编辑器打开此处的host文件，然后在文件最后加上如下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#GitHub Start</span><br><span class="line">192.30.253.112 Build software better, together</span><br><span class="line">192.30.253.119 gist.github.com</span><br><span class="line">151.101.184.133 assets-cdn.github.com</span><br><span class="line">151.101.184.133 raw.githubusercontent.com</span><br><span class="line">151.101.184.133 gist.githubusercontent.com</span><br><span class="line">151.101.184.133 cloud.githubusercontent.com</span><br><span class="line">151.101.184.133 camo.githubusercontent.com</span><br><span class="line">151.101.184.133 avatars0.githubusercontent.com</span><br><span class="line">151.101.184.133 avatars1.githubusercontent.com</span><br><span class="line">151.101.184.133 avatars2.githubusercontent.com</span><br><span class="line">151.101.184.133 avatars3.githubusercontent.com</span><br><span class="line">151.101.184.133 avatars4.githubusercontent.com</span><br><span class="line">151.101.184.133 avatars5.githubusercontent.com</span><br><span class="line">151.101.184.133 avatars6.githubusercontent.com</span><br><span class="line">151.101.184.133 avatars7.githubusercontent.com</span><br><span class="line">151.101.184.133 avatars8.githubusercontent.com</span><br><span class="line">#GitHub End</span><br></pre></td></tr></table></figure>
<p>保存之后，可以发现我的GitHub加载正常了（速度还没测怎么样）↓<br><img src="https://img-blog.csdnimg.cn/20200616133847867.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="GitHub"><br>然后再访问部署在GitHub上的Hexo博客，也恢复正常了↓<br><img src="https://img-blog.csdnimg.cn/20200616133942223.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="Hexo"></p>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>静态博客</tag>
      </tags>
  </entry>
  <entry>
    <title>Java的前世与今生</title>
    <url>/z_post/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89Java%E7%9A%84%E5%89%8D%E4%B8%96%E4%B8%8E%E4%BB%8A%E7%94%9F/</url>
    <content><![CDATA[<p>印度尼西亚有一个盛产咖啡的岛屿叫做Java，其中文译名为爪哇，SUN公司的开发人员为他们开发的一种新语言起名为Java，其寓意是“为世人端上一杯热咖啡”……<br><img src="https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=2374635544,2504122285&fm=26&gp=0.jpg" alt="Java"></p>
<a id="more"></a>

<h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><ol>
<li>什么是Java（概述、应用特点）</li>
<li>Java的发展过程</li>
</ol>
<h4 id="1-什么是Java"><a href="#1-什么是Java" class="headerlink" title="1.  什么是Java"></a>1.  什么是Java</h4><ul>
<li>1.1    Java概述</li>
<li>1.2   Java的应用</li>
<li>1.3    Java的特点</li>
</ul>
<p><strong>1.1 Java概述</strong></p>
<blockquote>
<p>SUN公司的中文名称是太阳公司，其在2009年被Oracle（甲骨文）公司以56亿美元（74亿美元刨去SUN公司账上18亿美元的现金）收购。</p>
</blockquote>
<p>Java具有面向对象、跨平台（操作系统）、安全、稳定和多线程等优良特性，是目前软件设计中优秀的编程语言。Java不仅可以用来开发大型的应用程序，而且特别适合于Internet应用的开发。Java确实具备了“一处编写，处处运行”第特点，这也是Java最初风靡全球的主要原因，并且时至今日仍为显露出将要衰退的征兆。</p>
<p>根据TIOBE排行榜在2019年11月份对语言流行指数的排名，Java再次蝉联了第一的位置。<br><img src="https://img-blog.csdnimg.cn/20191108002133314.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>《Java核心技术》在第一卷有过这样的描述：“<strong>作为一名程序设计人员，常常希望能够有一种语言，它具有令人赏心悦目的语法和易于理解的语义（C++不是这样的）。与许多其他的优秀语言一样，Java完全满足了这些要求。</strong>”</p>
<p>Java是一个完整的平台，它有一个其他许多语言没有的庞大的库，其中包含了很多可重用的代码和一个提供诸如安全性、跨操作系统的可移植性以及自动垃圾回收集等服务，所以说Java是一种功能齐全的出色语言、是一个高质量的执行环境。</p>
<p>正是因为Java集多种优势于一身，所以对广大的程序设计人员有着不可抗拒的吸引力。</p>
<p><strong>1.2 Java的应用</strong></p>
<p>Java的应用非常广泛：</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>内容</th>
</tr>
</thead>
<tbody><tr>
<td>Android开发</td>
<td>Android手机上的APP几乎都是用Java开发的，例如微信、支付宝等。</td>
</tr>
<tr>
<td>桌面应用程序</td>
<td>Java也可以用来开发电脑上的软件，例如Eclipse、Netbeans。</td>
</tr>
<tr>
<td>网站</td>
<td>Java非常适合开发大型的企业网站，例如人人网、去哪儿网的后台都是Java。</td>
</tr>
<tr>
<td>嵌入式应用</td>
<td>Java在嵌入式领域发展空间很大。在这个平台上，只需130KB就能够使用Java技术（在智能卡或者传感器上）。</td>
</tr>
<tr>
<td>在金融业应用的服务器程序</td>
<td>Java在金融服务业的应用非常广泛，很多第三方交易系统、银行、金融机构都选择用Java开发，因为相对而言，Java较安全。</td>
</tr>
<tr>
<td>大数据技术</td>
<td>Hadoop以及其他大数据处理技术很多都是用Java，例如Apache的基于Java的HBase和Accumulo以及 ElasticSearchas。</td>
</tr>
<tr>
<td>高频交易的空间</td>
<td>Java平台提高了这个平台的特性和即使编译，他同时也能够像 C++ 一样传递数据。正是由于这个原因，Java成为的程序员编写交易平台的语言，因为虽然性能不比C++，但开发人员可以避开安全性，可移植性和可维护性等问题。</td>
</tr>
<tr>
<td>科学应用</td>
<td>Java在科学应用中是很好选择，包括自然语言处理。最主要的原因是因为Java比C++或者其他语言相对其安全性、便携性、可维护性以及其他高级语言的并发性更好。</td>
</tr>
</tbody></table>
<blockquote>
<p>桌面应用程序、企业级应用(网站)和Android是目前Java的主要应用方向。</p>
</blockquote>
<blockquote>
<p>Java成功地推出后不久，微软就发布了一个叫做J++的产品，它与Java有几乎相同的编程语言以及虚拟机。现在，微软不再支持J++，取而代之的是另一种名为C#的语言。C#与Java有很多相似之处，然而使用的却是完全不同的虚拟机。</p>
</blockquote>
<p><strong>1.3 Java的特点</strong></p>
<table>
<thead>
<tr>
<th>名称</th>
<th>具体内容</th>
</tr>
</thead>
<tbody><tr>
<td>简单性</td>
<td>Java剔除了C++中许多很少使用、难以理解、易混淆的特性。在目前看来，这些特性（如头文件、指针、虚基类等）带来的麻烦远远多于其带来的好处。所以说Java语法是C++语法的一个“纯净”版本，我甚至见过有人把Java称为“C++ -（C++减）”。</td>
</tr>
<tr>
<td>面向对象</td>
<td>开发Java时面向对象技术已经相当成熟。Java的面向对象特性与C++旗鼓相当。Java与C++的主要不同点在于多重继承，在Java中，取而代之的是更简单的接口概念。</td>
</tr>
<tr>
<td>分布式</td>
<td>Java有一个丰富的例程库，用于处理像HTTP和FTP之类的TCP/IP协议。</td>
</tr>
<tr>
<td>健壮性</td>
<td>Java编译器能够检测许多其他语言中仅在运行时才能够检测出来的问题。</td>
</tr>
<tr>
<td>安全性</td>
<td>Java适用于网络/分布式环境。为了达到这个目标，在安全方面投入了很大精力。使用Java可以构建防病毒、防篡改的系统。然而现在看来，Java的安全模式并没有原先预想的那么成功，但是在之前的时代Java确实相当超前。</td>
</tr>
<tr>
<td>体系结构中立</td>
<td>编译器生成一个体系结构中立的目标文件格式，这是一种编译过的代码，只要有Java运行时系统，这些编译后的代码可以在许多处理器上运行。（关于这一部分的详细内容可以查看我的另一篇博客《Java学习笔记（四）Java的编译运行过程》）</td>
</tr>
<tr>
<td>可移植性</td>
<td>与C和C++不同，Java规范中没有“依赖具体实现”的地方。基本数据类型的大小以及有关运算都做了明确的规定。</td>
</tr>
<tr>
<td>解释型</td>
<td>Java可以在任何移植了解释器的机器上执行Java字节码。</td>
</tr>
<tr>
<td>*高性能</td>
<td>现在的即时编译器已经非常出色，以至于成了传统编译器的竞争对手。在某些情况下，甚至超越了传统编译器，原因是他们含有更多的可用信息。</td>
</tr>
<tr>
<td>多线程</td>
<td>如今，我们非常关注并发性，因为摩尔定律的发展速度正在放缓。我们不仅再追求更快的处理器，同时着眼于获得更多的处理器，并且要让他们一直保持工作。而Java是第一个在语言级别提供内置多线程支持的高级语言，并且表现得非常出色。</td>
</tr>
<tr>
<td>动态性</td>
<td>从各种角度看，Java与C或C++相比更加具有动态性。它能适应不断发展的环境。库中可以自由地添加新方法和实例变量，而对客户端却没有任何影响。在Java中找出运行时类型信息十分简单。</td>
</tr>
</tbody></table>
<h4 id="2-Java的发展过程"><a href="#2-Java的发展过程" class="headerlink" title="2.  Java的发展过程"></a>2.  Java的发展过程</h4><ul>
<li>SUN公司成立</li>
<li>“Green”计划</li>
<li>“Oak”语言的诞生</li>
<li>Java面世及其在SUN公司的发展</li>
<li>SUN公司被收购及Java在Oracle公司的发展</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20191108112446927.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<blockquote>
<p>20世纪八九十年代是科技工业史上群星闪耀的时代。在以前AT&amp;T和IBM的时代需要半个世纪才能发生的事，可能在这里10年里一下子就发生并结束了。在这个大时代里，很多公司原本有可能成为信息工业的王者，却最终与机会失之交臂。这些公司，不论当初多么辉煌，当它开始走下坡路时，被人遗忘的速度比它衰落的速度更快。——《浪潮之巅（第三版·上册）》<br>而SUN公司（其中文名为太阳公司）显然是这样一位曾经在信息产业叱咤风云却最后消失于江湖的争霸者。</p>
</blockquote>
<ol>
<li><strong>SUN公司成立</strong></li>
</ol>
<p>Sun公司名称的由来是斯坦福大学校园网（Stanford University Network）的首字母缩写。当 Andy Bechtolsheim（安迪·贝克托森 ）还是斯坦福大学研究生时，他设计出一种“三个百万”的小型图形计算机，这在当时已经是很先进的了。</p>
<p>贝克托森开发出原型机 Sun-1 后，便于 1982 年和斯科特·马可尼里（Scott McNealy）等斯坦福毕业生从学校出来创办了Sun公司。</p>
<blockquote>
<p>从斯坦福大学孵化出的高科技公司首推太阳公司，它也是最早进入中国市场并直接与中国政府开展技术合作的计算机公司。在2000年的高峰期，太阳公司在全球拥有5万雇员，市值超过2000亿美元，是2009年被甲骨文收购时56亿美元（74亿美元刨去太阳公司账上的18亿美元的现金）的30多倍，而2000年排名第二的科技公司Google市值峰值才1700亿美元，排名第三的IBM市值峰值为1600亿美元。——《浪潮之巅（第三版上册）》</p>
</blockquote>
<ol start="2">
<li><strong>“Green”计划</strong></li>
</ol>
<p>在上世纪90年代，硬件领域出现了单片式计算机系统，因为使用它可以大幅度提升消费类电子产品（如电视机顶盒、面包烤箱、移动电话等）的智能化程度，所以这种价格低廉的系统一出现就立即引起了自动控制领域人员的注意。</p>
<p>所以由Patrick Naughton（帕特里克·诺顿）和James Gosling（詹姆斯·高斯林）带领的Sun公司的工程小组便想要为这类消费设备设计一种小型计算机语言，主要用于像有线电视转换盒这类的消费设备。由于这些消费设备的处理能力和内存都很有限，所以语言必须非常小且能够生成非常紧凑的代码。另外，由于不同的厂商会选择不同的中央处理器（CPU），因此这种语言的关键是不与任何特定的体系结构捆绑在一起。最终这个项目被命名为“Green”（其中文名为“绿色计划”）。</p>
<p>开发目的使得这种语言不仅要代码短小、紧凑而且要与平台无关，这些要求就促使着开发团队设计一个可移植的语言，可以为虚拟机生成中间代码。</p>
<blockquote>
<p>为“虚拟机”生成代码并不是一个新思路，诸如Lisp、Smalltalk和Pascal等编程语言多年前就已经采用了这种技术。</p>
</blockquote>
<ol start="3">
<li><strong>“Oak”语言的诞生</strong></li>
</ol>
<p>在1992年的夏天，这种语言开发成功，Gosling将这种语言命名为“Oak”（这么起名的原因大概是因为他非常喜欢自己办公室外的橡树）。</p>
<p>由于在开发Oak语言时，尚且不存在运行字节码的硬件平台，所以为了在开发时可以对这种语言进行实验研究，他们就在已有的硬件和软件平台基础上，按照自己所指定的规范，用软件建设了一个运行平台，整个系统除了比C++更加简单之外，没有什么大的区别。当Oak语言开发成功后，Green项目发布了它的第一个产品“*7”。研究者们向硬件生产商进行演示了Green操作系统、Oak的程序设计语言、类库和其硬件，以说服他们使用Oak语言生产硬件芯片，但是，硬件生产商并未对此产生极大的热情。因为他们认为，在所有人对Oak语言还一无所知的情况下，就生产硬件产品的风险实在太大了，所以Oak语言也就因为缺乏硬件的支持而无法进入市场，从而被搁置了下来。</p>
<ol start="4">
<li><strong>Java面世及其在SUN公司的发展</strong></li>
</ol>
<p>Green项目后来更名为“First Person公司”，First Person公司花费了1993年整整一年的时间也没有找到一个其技术的买家。最终，在1994年First Person公司解散了。</p>
<p>1995年，互联网的蓬勃发展给了Oak机会。业界为了使死板、单调的静态网页能够“灵活”起来，急需一种软件技术来开发一种程序，这种程序可以通过网络传播并且能够跨平台运行。于是，世界各大IT企业为此纷纷投入了大量的人力、物力和财力。这个时候，Sun公司想起了那个被搁置起来很久的Oak，并且重新审视了那个用软件编写的试验平台，由于它是按照嵌入式系统硬件平台体系结构进行编写的，所以非常小，特别适用于网络上的传输系统，而Oak也是一种精简的语言，程序非常小，适合在网络上传输。Sun公司首先推出了可以嵌入网页并且可以随同网页在网络上传输的Applet（Applet是一种将小程序嵌入到网页中进行执行的技术），并将Oak更名为Java（在申请注册商标时，发现Oak已经是一种已有计算机语言的名字，再想了一系列名字之后，最终，使用了提议者在喝一杯Java咖啡时无意提到的Java词语，其寓意是“为世人端上一杯热咖啡”）。</p>
<p>5月23日，Sun公司在Sun world会议上正式发布Java和HotJava浏览器。IBM、Apple、DEC、Adobe、HP、Oracle、Netscape和微软等各大公司都纷纷停止了自己的相关开发项目，竞相购买了Java使用许可证，并为自己的产品开发了相应的Java平台。</p>
<p>1996年1月，Sun公司发布了Java的第一个开发工具包（JDK 1.0），这是Java发展历程中的重要里程碑，标志着Java成为一种独立的开发工具。而后Java得到不断的发展，在2006年11月13日，SUN公司宣布将Java技术作为免费软件对外发布。Sun公司正式发布了有关Java平台标准版的第一批源代码，以及Java迷你版的可执行源代码。从2007年3月起，全世界所有的开发人员均可对Java源代码进行修改。2009年，甲骨文公司宣布收购Sun 。2010年，Java编程语言的共同创始人之一James Gosling（詹姆斯·高斯林）从Oracle公司辞职。</p>
<p>Java在SUN公司发布的版本及其特性：</p>
<table>
<thead>
<tr>
<th>版本/年份/类与接口数量</th>
<th>新版本特性</th>
</tr>
</thead>
<tbody><tr>
<td>1.0 / 1996 / 211</td>
<td>新语言发布</td>
</tr>
<tr>
<td>1.1 / 1997 / 477</td>
<td>内部类</td>
</tr>
<tr>
<td>1.2 / 1998 / 1524</td>
<td>strictfp修饰符</td>
</tr>
<tr>
<td>1.3 / 2000 / 1840</td>
<td>无</td>
</tr>
<tr>
<td>1.4 / 2002 / 2723</td>
<td>断言</td>
</tr>
<tr>
<td>5.0 / 2004 / 3279</td>
<td>泛型类、“for each”循环、可变元参数、自动装箱、元数据、枚举、静态导入</td>
</tr>
<tr>
<td>6 / 2006 / 3793</td>
<td>无</td>
</tr>
</tbody></table>
<ol start="5">
<li><strong>SUN公司被收购及Java在Oracle公司的发展</strong></li>
</ol>
<p>SUN公司从1982年成立到2000年达到顶峰用了将近20年时间，而走下坡路只用了一年。</p>
<blockquote>
<p>从1986—2001年，太阳公司的营业额从2.1亿美元增至183亿美元，平均每年增长率高达36%。但当2000年互联网泡沫破碎时，它以服务器和工作站为主的硬件业务便急转直下。2002年财政年度（到2002年6月），它的营业额就比前一年跌掉了三成，并且从前一年盈利9亿美元转为亏损5亿美元。由于太阳公司找不到稳定的利润来源和新的增长点，从此太阳公司便江河日下，一下从硅谷最值钱的公司沦为人均市值最低的公司。——《浪潮之巅（第三版上册）》</p>
</blockquote>
<p>在Oracle公司收购SUN公司时，SUN公司不仅有开源语言Java，还拥有开源操作系统Solaris和开源数据库MySQL。</p>
<p>对于Solaris操作系统，Oracle公司不再支持；对于MySQL和Java，主要用来和Google公司打版权官司。因为Google不仅是MySQL最大的用户，而且其旗下Android应用平台用的是Java却没有付过钱。虽然最终Oracle公司赢了官司，但是从经济上考虑却是两败俱伤。</p>
<p>Java语言在Oracle公司也得到了非常好的发展，尤其是Java8。</p>
<p>Java在Oracle公司发布的版本及其特性：</p>
<table>
<thead>
<tr>
<th>版本/年份/类与接口数量</th>
<th>新版本特性</th>
</tr>
</thead>
<tbody><tr>
<td>7 / 2011 / 4024</td>
<td>基于字符串的switch、钻石操作符、二进制字面量、异常处理改进</td>
</tr>
<tr>
<td>8 / 2014 / 4240</td>
<td>lambda表达式，包含默认方法的接口，流和日期/时间库</td>
</tr>
<tr>
<td>9 / - / -</td>
<td>——</td>
</tr>
<tr>
<td>10 / - / -</td>
<td>——</td>
</tr>
<tr>
<td>11 / - / -</td>
<td>——</td>
</tr>
<tr>
<td>12 / - / -</td>
<td>——</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Java学习笔记</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>历史</tag>
      </tags>
  </entry>
  <entry>
    <title>Java程序设计环境（JDK）</title>
    <url>/z_post/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89Java%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E7%8E%AF%E5%A2%83%EF%BC%88JDK%EF%BC%89/</url>
    <content><![CDATA[<p><img src="http://img2.imgtn.bdimg.com/it/u=3289273105,3212148743&fm=26&gp=0.jpg" alt="Oracle JDK 1.8"></p>
<a id="more"></a>

<h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><ul>
<li>JDK、JRE和JVM的含义、关系</li>
<li>安装JDK</li>
<li>命令提示符常用命令</li>
</ul>
<h6 id="JDK、JRE和JVM的含义及关系"><a href="#JDK、JRE和JVM的含义及关系" class="headerlink" title="JDK、JRE和JVM的含义及关系"></a>JDK、JRE和JVM的含义及关系</h6><p> 首先说一下JDK、JRE和JVM之间是如下包含关系：<br><img src="https://img-blog.csdnimg.cn/20190514145135433.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li><strong>JVM（Java Virtual Machine）：Java 虚拟机</strong><br>要介绍Java虚拟机，就不得不提到Java“一次编译，到处运行”的跨平台特性。所谓跨平台性就是无论在任何操作系统（例如windows）下编写的一段Java代码，无需任何修改就可以在其他系统（例如Linux）下运行，这是C/C++所不能做到的。<br>而跨平台性的实现靠的就是Java虚拟机（JVM）。<br>JVM也是一个软件，像其他软件一样有不同的版本。<br>Java代码在不像C++代码那样编译后直接生成可执行文件，双击就可以直接运行。Java代码在编译后生成的是.class文件（<strong>同一段Java代码在任何平台下编译生成的字节码是相同的</strong>），也叫做字节码文件。字节码并不是机器码，所以这里就需要Java虚拟机来将字节码文件翻译成特定机器下的机器码然后运行（<strong>同一段字节码在经不同JVM翻译的时候会生成不同的机器码</strong>）。<br>也就是说，我们只需要在不同的平台上安装对应的JVM，就可以将我们所写Java代码的字节码文件不加修改地运行在不同平台上。<br>总而言之，JVM就是一个执行字节码文件的软件。对于一段Java代码来说，在它能够被JVM翻译之前还需要另外一个工具先把他编译成字节码文件，这个工具，就是JRE。</li>
<li><strong>JRE（Java Runtime Environment）：Java 运行时环境</strong><br>JRE包含JVM和一些运行类库，但是不包含编译器。它是提供给不需要编译器的用户使用的软件。显然这也并不是Java开发者使用的软件。</li>
<li><strong>JDK（Java Development Kit）：Java 开发工具包</strong><br>JDK是一个包含编译器等开发者工具以及JRE、提供给编写Java程序的程序员使用的软件。JDK在1998-2006年之间的时候被叫做SDK，现在这个术语已经过时了。<br>下载并正确安装、设置JDK是编写Java程序的第一步。下面就来具体介绍一下如何下载并设置JDK。</li>
</ul>
<p>最后在这里再附上一张JVM、JRE、JDK之间关系更加清楚的图（其实这张图在学习Java的时候应该经常见到）<br><img src="https://img-blog.csdnimg.cn/20190513170618941.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h6 id="设置JDK"><a href="#设置JDK" class="headerlink" title="设置JDK"></a>设置JDK</h6><ol>
<li><strong>下载JDK</strong><br>想要下载JDK（Java开发工具包），可以访问Oracle（因为Java已经被Oracle公司收购）网站：<blockquote>
<p><a href="https://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">https://www.oracle.com/technetwork/java/javase/downloads/index.html</a></p>
</blockquote>
</li>
</ol>
<blockquote>
<p>在下载JDK的时候我们经常会看到Java SE、Java EE、Java 、ME的字样，他们的意思分别是：</p>
<ol>
<li><strong>SE</strong>（<strong>Standard Edition</strong>）是用于桌面或简单服务器应用的Java平台；<ol start="2">
<li><strong>EE</strong>（<strong>Enterprise Edition</strong>）是用于复杂服务器应用的Java平台；</li>
<li><strong>ME</strong>（<strong>Micro Edition</strong>）是用于手机和其他小型设备的Java平台。</li>
</ol>
</li>
</ol>
</blockquote>
<p>在上述网站点击想要下载版本对应的download图标；<br><img src="https://img-blog.csdnimg.cn/20190514142929326.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>之后下拉并选择选择“Accept License Agreement”；<br><img src="https://img-blog.csdnimg.cn/20190514143009175.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后下载相应系统版本的就可以了。一般来说下载Java SE就可以。</p>
<blockquote>
<p>提醒：<br>1.在具体安装时，安装路径中尽量不要有中文和空格，因为默认路径中往往含有文件夹“Program Files”，建议更改。<br>2.下载JDK之后，在后面经常会用到JDK的安装路径信息，建议记住选择的路径。</p>
</blockquote>
<ol start="2">
<li><strong>添加环境变量</strong></li>
</ol>
<p>在Windows上安装JDK时，还需要另外完成一个步骤，就是将刚才安装的JDK中的<strong>jdk</strong>和<strong>bin</strong>这两个目录增加到<strong>执行路径</strong>（<strong>操作系统查找可执行文件时所遍历的目录列表</strong>）。这就是我们常说的添加环境变量。我也会在之后对命令提示符的介绍当中简单对比一下添加环境变量前后的变化。</p>
<p><strong>下面给出添加环境变量的步骤：</strong></p>
<p>我的电脑→右键→属性（或者在磁盘根路径下→右键空白区域→属性）<br>下图所示为磁盘根路径界面：<br><img src="https://img-blog.csdnimg.cn/20190514145635292.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>→高级系统设置<br><img src="https://img-blog.csdnimg.cn/20190514145748106.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>→高级→环境变量<br> <img src="https://img-blog.csdnimg.cn/20190514145903204.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>我们要做的就是在下方系统变量（全局生效的系统变量）区域新建一个东西并且修改一个东西。我们首先选择新建：<br><img src="https://img-blog.csdnimg.cn/20190514150247778.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2019051415040447.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 在变量名中输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JAVA_HOME</span><br></pre></td></tr></table></figure>
<p>再将光标移至变量值输入框中，选择浏览目录，选择刚刚安装的JDK，点击确定：<br><img src="https://img-blog.csdnimg.cn/2019051415092488.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>也可以在磁盘中打开刚刚安装好的JDK，注意只需要打开到这一层就可以：<br><img src="https://img-blog.csdnimg.cn/2019051415105936.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后再将光标移动至下图红色选区内：<br><img src="https://img-blog.csdnimg.cn/20190514151203209.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>鼠标左键单击，复制路径信息到变量值里就可以了。<br><img src="https://img-blog.csdnimg.cn/2019051415130496.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>刚才我们已经创建好了一个系统变量，下面我们只需要再修改一个系统变量就可以了。</p>
<p>在系统变量中找到“Path”，双击或者选中点击编辑。<br><img src="https://img-blog.csdnimg.cn/201905141523519.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>之后点击新建，并且输入（注意一个字符都不要错）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">%JAVA_HOME%\bin</span><br></pre></td></tr></table></figure>
<p>然后一步一步保存就可以了。<br> 3. <strong>测试一下</strong></p>
<p>按“Win+R”快捷键，并在弹出的运行窗口内输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cmd</span><br></pre></td></tr></table></figure>
<p>回车，或者单击确定，<br><img src="https://img-blog.csdnimg.cn/20190514153809218.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>直接在控制台输入Java并按回车，如果弹出窗口显示如下则代表安装成功。<br><img src="https://img-blog.csdnimg.cn/20190514153923749.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h6 id="命令提示符常用命令"><a href="#命令提示符常用命令" class="headerlink" title="命令提示符常用命令"></a>命令提示符常用命令</h6><blockquote>
<p>1.javac    编译，将.java文件编译成.class字节码文件。使用格式：javac+空格+带扩展名文件名，例如 javac hello.java<br>2.java 运行，将.class文件运行。使用格式：java+空格+无扩展名文件名，例如 java hello<br>3.java -version 查看当前JDK版本；<br>4.jshell Java9版本开始提供的一个快速测试代码的开发工具；<br>4.cls（clear screen），清理控制台内容；<br>5.exit 关闭控制台窗口;<br>6.cd /  返回根目录</p>
</blockquote>
]]></content>
      <categories>
        <category>Java学习笔记</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java开发环境集锦</title>
    <url>/z_post/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89Java(%E9%9B%86%E6%88%90)%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%8E%A8%E8%8D%90/</url>
    <content><![CDATA[<p><img src="http://pic4.zhimg.com/50/v2-97527aa05b38a3512bc112a2c421c099_bh.jpg" alt="Intellij IDEA"></p>
<a id="more"></a>

<p><strong>目录</strong></p>
<ol>
<li>概要</li>
<li>命令行</li>
<li>文本编辑工具</li>
<li>集成开发环境</li>
</ol>
<blockquote>
<p>由于作者的见识有限（刚刚开始学习Java），所以对于开发环境的整理难免会有遗漏与不合理的地方。对于这些地方，我会在发现的第一时间对文章进行修改、补充，同时十分欢迎各位读者在评论区中留言补充给我。</p>
</blockquote>
<p><strong>1.概要</strong><br>《论语》说得好：“工欲善其事，必先利其器。”，选择一个好的开发环境可以极大幅度地提高开发人员的开发效率，因此本篇文章就从命令行、文本编辑工具、集成开发环境三个角度来给大家介绍一些常见的Java开发环境。</p>
<blockquote>
<p>要想编译、运行Java程序必须要安装JDK，关于JDK的安装及JDK、JRE和JVM的关系可以参考我的上一篇文章《Java学习笔记（二）Java程序设计环境》。</p>
<p>注：如果只需要运行Java程序的话安装JRE就可以了，但是JRE只包含Java虚拟机，不包含Java编译器，所以无法将Java源程序文件编译成为Java字节码文件（关于Java编译运行的详细过程会在下一篇文章中介绍），因此JRE并不是Java开发者想要的环境，而是专门为不需要编译器的用户提供，开发者需要安装JDK。</p>
</blockquote>
<p><strong>2.命令行</strong><br>命令行直接输入的方式比较适合脚本类的语言，比如python等, 可以直接通过命令行执行一些简单的逻辑。Java语言不支持这种模式，因为Java需要从源码编译为二进制文件，由于这个预编译的机制，所以无法这样实现，这里仅作了解即可。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&gt; 虽然Java不能直接在命令行里面写代码，但是有两条常用的命令提</span><br><span class="line">示符（编译、运行）会在下面的文本编辑工具中用到：</span><br><span class="line"></span><br><span class="line">javac 文件名.java <span class="comment">//命令提示符中的编译操作</span></span><br><span class="line">java 文件名 <span class="comment">//命令提示符中的运行操作</span></span><br></pre></td></tr></table></figure>

<p><strong>3.文本编辑工具</strong><br>文本类的工具在编程中比较常用。现在仍有很多人保持着采用文本编辑工具编程的习惯。</p>
<p>常用的文本编辑工具有：<br>|名称|特点  |<br>|–|–|<br>|记事本|windows自带|<br>|Notepad++|免费，支持多种语言字符高亮的插件，功能强大，市场占有率较高|<br>|Sublime Text|一个很常用的文本编辑器|<br>|VS Code|市场占有率第一的开发环境，同时不仅仅是一个编辑器，可以自己搭配环境、安装各种插件|<br>|Atom|–|<br>|UltraEdit|–|<br>|jEdit|–|</p>
<p><strong>4.集成开发环境</strong><br>集成开发环境简称IDE(Integrated Development Environment)。集成了代码编辑、编译、运行、输出、调试、代码自动补全、语法检查等功能。是开发人员开疆拓土的神兵利器。</p>
<p>常用的集成开发环境有：<br>|名称|特点  |<br>|–|–|<br>|Eclipse|免费、经典的IDE，曾经独领风骚，但是那个时代已经过去了。|<br>|Intelij IDEA|JetBrains公司的核心软件之一，功能强大，成功接过了Eclipse的接力棒，是这个时代的领袖软件之一。Intellij IDEA也为Google的安卓开发平台Android Studio提供了技术支持。|<br>|Android Studio|安卓开发平台，由Intellij IDEA提供技术支持，完全支持Java语言，学习的同时还可以顺便学习Android开发，一举两得。（但是说实话并不建议使用Android Studio来学习Java语言，在此只是提一下Android Studio上可以跑Java）|<br>|VS Code Java|北京时间 2019 年 6 月 14 日 ，微软发布了 VS Code Java 安装程序，方便开发者能一键安装所有 Java 开发环境。|<br>|NetBeans|–|<br>|BlueJ|–|<br>|DrJava|DrJava IDE具有互动友好的界面，其测试，调试和智能编辑功能都旨在为新手创建一个轻巧的IDE，对学生来说也许是个不错的选择。|<br>|JCreator|JCreator IDE仅限于Windows，作为本地平台，易于安装和启动。在新用户中间颇受欢迎。</p>
]]></content>
      <categories>
        <category>Java学习笔记</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis部署环境时关于时区的一个小坑</title>
    <url>/z_post/MyBatis%E9%83%A8%E7%BD%B2%E7%8E%AF%E5%A2%83%E6%97%B6%E5%85%B3%E4%BA%8E%E6%97%B6%E5%8C%BA%E7%9A%84%E4%B8%80%E4%B8%AA%E5%B0%8F%E5%9D%91/</url>
    <content><![CDATA[<p>今天配置MyBatis环境时遇到了一个关于MySQL时区设置的情况，配置好环境之后运行报了下面这种异常：<br><img src="https://img-blog.csdnimg.cn/20200617233044369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="报错信息截图"></p>
<a id="more"></a>

<p>报错信息：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Exception in thread <span class="string">"main"</span> org.apache.ibatis.exceptions.PersistenceException: </span><br><span class="line">### Error querying database.  Cause: java.sql.SQLException: The server time zone value '?й???????' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.</span><br><span class="line">### The error may exist in com/garlicgo/dao/IUserDao.xml</span><br><span class="line">### The error may involve com.garlicgo.dao.IUserDao.findAll</span><br><span class="line">### The error occurred while executing a query</span><br><span class="line">### Cause: java.sql.SQLException: The server time zone value '?й???????' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.</span><br><span class="line">	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:<span class="number">30</span>)</span><br><span class="line">	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:<span class="number">149</span>)</span><br><span class="line">	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:<span class="number">140</span>)</span><br><span class="line">	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:<span class="number">147</span>)</span><br><span class="line">	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:<span class="number">80</span>)</span><br><span class="line">	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:<span class="number">144</span>)</span><br><span class="line">	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:<span class="number">85</span>)</span><br><span class="line">	at com.sun.proxy.$Proxy2.findAll(Unknown Source)</span><br><span class="line">	at com.garlicgo.test.MybatisTest.main(MybatisTest.java:<span class="number">38</span>)</span><br><span class="line">Caused by: java.sql.SQLException: The server time zone value <span class="string">'?й???????'</span> is unrecognized or represents more than one time zone. <span class="function">You must configure either the server or JDBC <span class="title">driver</span> <span class="params">(via the <span class="string">'serverTimezone'</span> configuration property)</span> to use a more specifc time zone value <span class="keyword">if</span> you want to utilize time zone support.</span></span><br><span class="line"><span class="function">	at com.mysql.cj.jdbc.exceptions.SQLError.<span class="title">createSQLException</span><span class="params">(SQLError.java:<span class="number">129</span>)</span></span></span><br><span class="line"><span class="function">	at com.mysql.cj.jdbc.exceptions.SQLError.<span class="title">createSQLException</span><span class="params">(SQLError.java:<span class="number">97</span>)</span></span></span><br><span class="line"><span class="function">	at com.mysql.cj.jdbc.exceptions.SQLError.<span class="title">createSQLException</span><span class="params">(SQLError.java:<span class="number">89</span>)</span></span></span><br><span class="line"><span class="function">	at com.mysql.cj.jdbc.exceptions.SQLError.<span class="title">createSQLException</span><span class="params">(SQLError.java:<span class="number">63</span>)</span></span></span><br><span class="line"><span class="function">	at com.mysql.cj.jdbc.exceptions.SQLError.<span class="title">createSQLException</span><span class="params">(SQLError.java:<span class="number">73</span>)</span></span></span><br><span class="line"><span class="function">	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.<span class="title">translateException</span><span class="params">(SQLExceptionsMapping.java:<span class="number">76</span>)</span></span></span><br><span class="line"><span class="function">	at com.mysql.cj.jdbc.ConnectionImpl.<span class="title">createNewIO</span><span class="params">(ConnectionImpl.java:<span class="number">836</span>)</span></span></span><br><span class="line"><span class="function">	at com.mysql.cj.jdbc.ConnectionImpl.&lt;init&gt;<span class="params">(ConnectionImpl.java:<span class="number">456</span>)</span></span></span><br><span class="line"><span class="function">	at com.mysql.cj.jdbc.ConnectionImpl.<span class="title">getInstance</span><span class="params">(ConnectionImpl.java:<span class="number">246</span>)</span></span></span><br><span class="line"><span class="function">	at com.mysql.cj.jdbc.NonRegisteringDriver.<span class="title">connect</span><span class="params">(NonRegisteringDriver.java:<span class="number">197</span>)</span></span></span><br><span class="line"><span class="function">	at java.sql/java.sql.DriverManager.<span class="title">getConnection</span><span class="params">(DriverManager.java:<span class="number">677</span>)</span></span></span><br><span class="line"><span class="function">	at java.sql/java.sql.DriverManager.<span class="title">getConnection</span><span class="params">(DriverManager.java:<span class="number">189</span>)</span></span></span><br><span class="line"><span class="function">	at org.apache.ibatis.datasource.unpooled.UnpooledDataSource.<span class="title">doGetConnection</span><span class="params">(UnpooledDataSource.java:<span class="number">221</span>)</span></span></span><br><span class="line"><span class="function">	at org.apache.ibatis.datasource.unpooled.UnpooledDataSource.<span class="title">doGetConnection</span><span class="params">(UnpooledDataSource.java:<span class="number">216</span>)</span></span></span><br><span class="line"><span class="function">	at org.apache.ibatis.datasource.unpooled.UnpooledDataSource.<span class="title">getConnection</span><span class="params">(UnpooledDataSource.java:<span class="number">95</span>)</span></span></span><br><span class="line"><span class="function">	at org.apache.ibatis.datasource.pooled.PooledDataSource.<span class="title">popConnection</span><span class="params">(PooledDataSource.java:<span class="number">422</span>)</span></span></span><br><span class="line"><span class="function">	at org.apache.ibatis.datasource.pooled.PooledDataSource.<span class="title">getConnection</span><span class="params">(PooledDataSource.java:<span class="number">89</span>)</span></span></span><br><span class="line"><span class="function">	at org.apache.ibatis.transaction.jdbc.JdbcTransaction.<span class="title">openConnection</span><span class="params">(JdbcTransaction.java:<span class="number">138</span>)</span></span></span><br><span class="line"><span class="function">	at org.apache.ibatis.transaction.jdbc.JdbcTransaction.<span class="title">getConnection</span><span class="params">(JdbcTransaction.java:<span class="number">60</span>)</span></span></span><br><span class="line"><span class="function">	at org.apache.ibatis.executor.BaseExecutor.<span class="title">getConnection</span><span class="params">(BaseExecutor.java:<span class="number">336</span>)</span></span></span><br><span class="line"><span class="function">	at org.apache.ibatis.executor.SimpleExecutor.<span class="title">prepareStatement</span><span class="params">(SimpleExecutor.java:<span class="number">86</span>)</span></span></span><br><span class="line"><span class="function">	at org.apache.ibatis.executor.SimpleExecutor.<span class="title">doQuery</span><span class="params">(SimpleExecutor.java:<span class="number">62</span>)</span></span></span><br><span class="line"><span class="function">	at org.apache.ibatis.executor.BaseExecutor.<span class="title">queryFromDatabase</span><span class="params">(BaseExecutor.java:<span class="number">324</span>)</span></span></span><br><span class="line"><span class="function">	at org.apache.ibatis.executor.BaseExecutor.<span class="title">query</span><span class="params">(BaseExecutor.java:<span class="number">156</span>)</span></span></span><br><span class="line"><span class="function">	at org.apache.ibatis.executor.CachingExecutor.<span class="title">query</span><span class="params">(CachingExecutor.java:<span class="number">109</span>)</span></span></span><br><span class="line"><span class="function">	at org.apache.ibatis.executor.CachingExecutor.<span class="title">query</span><span class="params">(CachingExecutor.java:<span class="number">83</span>)</span></span></span><br><span class="line"><span class="function">	at org.apache.ibatis.session.defaults.DefaultSqlSession.<span class="title">selectList</span><span class="params">(DefaultSqlSession.java:<span class="number">147</span>)</span></span></span><br><span class="line"><span class="function">	... 7 more</span></span><br><span class="line"><span class="function">Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '?й???????' is unrecognized or represents more than one time zone. You must configure either the server or JDBC <span class="title">driver</span> <span class="params">(via the <span class="string">'serverTimezone'</span> configuration property)</span> to use a more specifc time zone value <span class="keyword">if</span> you want to utilize time zone support.</span></span><br><span class="line"><span class="function">	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.<span class="title">newInstance0</span><span class="params">(Native Method)</span></span></span><br><span class="line"><span class="function">	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.<span class="title">newInstance</span><span class="params">(NativeConstructorAccessorImpl.java:<span class="number">62</span>)</span></span></span><br><span class="line"><span class="function">	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.<span class="title">newInstance</span><span class="params">(DelegatingConstructorAccessorImpl.java:<span class="number">45</span>)</span></span></span><br><span class="line"><span class="function">	at java.base/java.lang.reflect.Constructor.<span class="title">newInstanceWithCaller</span><span class="params">(Constructor.java:<span class="number">500</span>)</span></span></span><br><span class="line"><span class="function">	at java.base/java.lang.reflect.Constructor.<span class="title">newInstance</span><span class="params">(Constructor.java:<span class="number">481</span>)</span></span></span><br><span class="line"><span class="function">	at com.mysql.cj.exceptions.ExceptionFactory.<span class="title">createException</span><span class="params">(ExceptionFactory.java:<span class="number">61</span>)</span></span></span><br><span class="line"><span class="function">	at com.mysql.cj.exceptions.ExceptionFactory.<span class="title">createException</span><span class="params">(ExceptionFactory.java:<span class="number">85</span>)</span></span></span><br><span class="line"><span class="function">	at com.mysql.cj.util.TimeUtil.<span class="title">getCanonicalTimezone</span><span class="params">(TimeUtil.java:<span class="number">132</span>)</span></span></span><br><span class="line"><span class="function">	at com.mysql.cj.protocol.a.NativeProtocol.<span class="title">configureTimezone</span><span class="params">(NativeProtocol.java:<span class="number">2118</span>)</span></span></span><br><span class="line"><span class="function">	at com.mysql.cj.protocol.a.NativeProtocol.<span class="title">initServerSession</span><span class="params">(NativeProtocol.java:<span class="number">2142</span>)</span></span></span><br><span class="line"><span class="function">	at com.mysql.cj.jdbc.ConnectionImpl.<span class="title">initializePropsFromServer</span><span class="params">(ConnectionImpl.java:<span class="number">1310</span>)</span></span></span><br><span class="line"><span class="function">	at com.mysql.cj.jdbc.ConnectionImpl.<span class="title">connectOneTryOnly</span><span class="params">(ConnectionImpl.java:<span class="number">967</span>)</span></span></span><br><span class="line"><span class="function">	at com.mysql.cj.jdbc.ConnectionImpl.<span class="title">createNewIO</span><span class="params">(ConnectionImpl.java:<span class="number">826</span>)</span></span></span><br><span class="line"><span class="function">	... 27 more</span></span><br></pre></td></tr></table></figure>
<p>这个就是需要设置一下时区，在主配置文件中数据库连接的URL后面加上 <code>serverTimezone=GMT</code> 就OK了。注意我这里没有加问号，但是下面截图中有一个问号，不明白的小伙伴只需要保证URL后面有且仅有一个问号就可以了。<br><img src="https://img-blog.csdnimg.cn/20200617233356268.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="配置信息"></p>
]]></content>
      <categories>
        <category>SSM学习笔记</category>
        <category>SSM踩坑笔记</category>
      </categories>
      <tags>
        <tag>MyBatis</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Java中的变量常量</title>
    <url>/z_post/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89Java%E4%B8%AD%E7%9A%84%E5%8F%98%E9%87%8F%E5%B8%B8%E9%87%8F/</url>
    <content><![CDATA[<p><img src="http://seo-1255598498.file.myqcloud.com/full/a58e4c08f3703869491f1d9f793b7c4f82a8ea6f.jpg" alt="Java中的变量常量"></p>
<a id="more"></a>
<h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><ol>
<li>变量</li>
<li>常量</li>
</ol>
<h5 id="1-变量"><a href="#1-变量" class="headerlink" title="1.  变量"></a>1.  变量</h5><ol>
<li>变量声明</li>
</ol>
<p>在Java中，每个变量都有一个类型（type）。在声明变量时，变量的类型位于变量名之前。</p>
<p>例如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="keyword">double</span> money;</span><br><span class="line"><span class="keyword">boolean</span> male;</span><br></pre></td></tr></table></figure>
<p>由于声明是一条完整的Java语句，所以每个声明必须以分号结束。</p>
<p>Java变量命名规则：<br>|序号|内容|<br>|–|–|<br>|1|变量名必须是一个以字母开头并由字母或数字构成的序列。|<br>|2|‘+’和‘©️’这样的符号不能出现在变量名中，空格也不行，并且不能使用关键字。|<br>|3|变量名中所有的字符都是有意义的，并且大小写敏感。|<br>|4|变量名的长度基本是没有限制。|</p>
<blockquote>
<p>Java变量命名规则的补充解释：<br>对于上述表格中的第1条规则需要注意，与大多数程序设计语言相比，Java中“字母”和“数字”的范围更大。字母包括‘A’～‘Z’、‘a’～‘z’、‘_’、‘$’或在某种语言中表示字母的任何Unicode字符。同样，数字包括‘0’～‘9’和在某种语言中表示数字的任何Unicode字符。</p>
</blockquote>
<blockquote>
<p>提示：<br>1.如果想知道哪些Unicode字符属于Java中的“字母”，可以使用Character类的isJavaIdentifierStart和isJavaIdentifierPart方法来检查。<br>2.尽管$是一个合法的Java字符，但不要在自己的代码中使用这个字符。它只用在Java编译器或其他工具生成的名字中。<br>3.不提倡在一行中声明多个变量。逐一声明每一个变量可以提高程序的可读性。<br>4.在对变量命名时使用小驼峰命名法，同时在对两个不同变量进行命名时，最好不要只存在大小写上的差异。</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//不推荐下面这种声明变量发方式</span></span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"><span class="comment">//推荐下面这种声明变量的方式</span></span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line"></span><br><span class="line"><span class="comment">//不推荐下面这种命名方式</span></span><br><span class="line"><span class="keyword">int</span> sonBirthday;<span class="keyword">int</span> sonbirthday;</span><br><span class="line"><span class="comment">//推荐下面这种命名方式</span></span><br><span class="line"><span class="keyword">int</span> firstSonBirthday;<span class="keyword">int</span> secondSonbirthday;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>变量初始化</li>
</ol>
<p>声明一个变量之后，必须用赋值语句对变量进行显式初始化，千万不要使用未初始化的变量（编译器会报错）。</p>
<p>想要对一个已经声明过的变量进行赋值，就需要将变量名放在等号（=）左侧，相应取值的Java表达式放在等号的右侧：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> number;</span><br><span class="line">number = <span class="number">1</span>;</span><br></pre></td></tr></table></figure>
<p>也可以将变量的声明和初始化放在同一行中，例如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> student = <span class="number">1</span>;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>在Java中，变量的声明尽可能地靠近变量第一次使用的地方，这是一种良好的程序编写风格。</p>
</blockquote>
<h5 id="2-常量"><a href="#2-常量" class="headerlink" title="2. 常量"></a>2. 常量</h5><table>
<thead>
<tr>
<th>名称</th>
<th>内容</th>
</tr>
</thead>
<tbody><tr>
<td>常量关键字</td>
<td>final，在Java中，利用关键字final指示常量。关键字final表示这个变量只能被赋值一次，一旦被赋值之后，就不能够再更改了。习惯上，常量名使用全大写。</td>
</tr>
<tr>
<td>类常量</td>
<td>static final，希望某个常量在一个类的多个方法中使用。</td>
</tr>
</tbody></table>
<blockquote>
<p>const是Java保留的关键字，但目前并没有使用。在Java中，必须使用final定义常量。</p>
</blockquote>
]]></content>
      <categories>
        <category>Java学习笔记</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java基本数据类型</title>
    <url>/z_post/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89Java%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
    <content><![CDATA[<p><img src="http://09imgmini.eastday.com/mobile/20181212/20181212223811_986eb6c59a1e0932e9585d2117746faa_1.jpeg" alt="Java基本数据类型"></p>
<a id="more"></a>

<h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><ol>
<li>整型</li>
<li>浮点类型</li>
<li>字符类型</li>
<li>布尔类型</li>
</ol>
<p>Java是一种强类型语言，这就意味着必须为每一个变量声明一种类型。Java中的数据类型可分为基本数据类型和引用数据类型两种，其中引用数据类型需要以基本数据类型为基础构成。</p>
<blockquote>
<p>本篇文章只对基本数据类型做一个尽可能全面的简单介绍，至于引用数据类型会在以后的篇幅中逐渐涉及到。</p>
</blockquote>
<p>如果要用一个词来概括Java基本数据类型的话，恐怕没有比“四类八种”更合适的了。</p>
<table>
<thead>
<tr>
<th>四类</th>
<th>八种</th>
</tr>
</thead>
<tbody><tr>
<td>整形</td>
<td>byte(1)、short(2)、int(4)、long(8)</td>
</tr>
<tr>
<td>浮点类型</td>
<td>float(4)、double(8)</td>
</tr>
<tr>
<td>字符类型</td>
<td>char(2)</td>
</tr>
<tr>
<td>布尔类型</td>
<td>boolen(1 bit)</td>
</tr>
</tbody></table>
<p>Java中一共有八种基本数据类型（primitive type），其中有4种整形、2种浮点类型、1种用于表示Unicode编码的字符单元的字符类型char和1种用于表示真值的boolean类型。</p>
<ol>
<li><strong>整型</strong></li>
</ol>
<table>
<thead>
<tr>
<th>整型类型(字节)</th>
<th>取值范围</th>
</tr>
</thead>
<tbody><tr>
<td>byte（1）</td>
<td>-128～127</td>
</tr>
<tr>
<td>short（2）</td>
<td>-32768～32767</td>
</tr>
<tr>
<td>int（4）</td>
<td>-2147483648～2147483647（正好超过20亿）</td>
</tr>
<tr>
<td>long（8）</td>
<td>-9223372036854775808～9223372036854775807</td>
</tr>
</tbody></table>
<blockquote>
<p>说明：<br>1.Java中整型的范围与运行Java代码的机器无关。<br>2.前后缀。<br>3.从Java7开始，可以为数字添加下划线，如：1_000_000<br>4.Java没有任何无符号（unsigned）形式的int、long、shotr和byte类型。</p>
</blockquote>
<ol start="2">
<li><strong>浮点类型</strong></li>
</ol>
<table>
<thead>
<tr>
<th>浮点型(字节)</th>
<th>取值范围</th>
</tr>
</thead>
<tbody><tr>
<td>float（4）</td>
<td>大约+-3.40282347E+38F（有效位数为6～7位）</td>
</tr>
<tr>
<td>double（8）</td>
<td>大约+-1.79769313486231570E+308（有效位数为15位）</td>
</tr>
</tbody></table>
<blockquote>
<p>说明：<br>1.浮点数值不适用于无法接受舍入误差的金融计算中。例如，命令System.out.println(2.0-1.1)将打印出0.8999999999999999，而不是0.9。这种舍入误差的主要原因是浮点数值采用二进制系统表示，而在二进制系统中无法精确地表示分数1/10。这就好像十进制无法精确地表示分数1/3一样。如果在数值计算中不允许有任何舍入误差，就应该使用BigDecimal类。</p>
</blockquote>
<ol start="3">
<li><strong>字符类型</strong></li>
</ol>
<p>在Java中，char类型描述了UTF-16编码中的一个代码单元。</p>
<p>特殊字符的转移序列：</p>
<table>
<thead>
<tr>
<th>转移序列（名称）</th>
<th>Unicode值</th>
</tr>
</thead>
<tbody><tr>
<td>\b（退格）</td>
<td>\u0008</td>
</tr>
<tr>
<td>\t（制表）</td>
<td>\u0009</td>
</tr>
<tr>
<td>\n（换行）</td>
<td>\u000a</td>
</tr>
<tr>
<td>\r（回车）</td>
<td>\u000d</td>
</tr>
<tr>
<td>\”（双引号）</td>
<td>\u0022</td>
</tr>
<tr>
<td>\’（单引号）</td>
<td>\u0027</td>
</tr>
<tr>
<td>\（反斜杠）</td>
<td>\u005c</td>
</tr>
</tbody></table>
<blockquote>
<p>说明：<br>1.char类型的字面量值要用单引号括起来。<br>2.Unicode转移序列会在解析代码之前得到处理。<br>3.不建议在程序中使用char类型，除非确实需要处理UTF-16代码单元。最好将字符串作为抽象数据类型处理。</p>
</blockquote>
<ol start="4">
<li><strong>布尔类型</strong></li>
</ol>
<p>boolean（布尔）类型有两个值：false和true，用来判定逻辑条件。</p>
<p>在Java中，整型值和布尔值之间不能相互转换。</p>
]]></content>
      <categories>
        <category>Java学习笔记</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>【MyBatis系统拓荒笔记-1】MyBatis入门之混沌初开</title>
    <url>/z_post/%E3%80%90MyBatis%E7%B3%BB%E7%BB%9F%E6%8B%93%E8%8D%92%E7%AC%94%E8%AE%B0%20-%201%E3%80%91MyBatis%E5%85%A5%E9%97%A8%E4%B9%8B%E6%B7%B7%E6%B2%8C%E5%88%9D%E5%BC%80/</url>
    <content><![CDATA[<p>MyBatis是一款用Java编写的优秀的持久层框架，封装了JDBC 操作的很多细节，同时使用了ORM思想实现了结果集的封装，几乎避免了所有的 JDBC 代码、手动设置参数以及获取结果集，使开发者只需要关注sql语句本身，而无需关注注册驱动，创建连接等繁杂过程。</p>
<p><img src="https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=1150253057,2576481104&fm=11&gp=0.jpg" alt="MyBatis"></p>
<a id="more"></a>
<blockquote>
<p>MyBatis系统拓荒系列文章：<br> 【MyBatis系统拓荒笔记 - 1】MyBatis入门之混沌初开<br>视频学习教程：<a href="https://www.runoob.com" target="_blank" rel="noopener">Mybatis教程IDEA版-4天-2018黑马SSM-01</a></p>
</blockquote>
<h5 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h5><ol>
<li><a href="#title1">MyBatis简介</a></li>
<li><a href="#title2">环境搭建</a></li>
<li><a href="#title3">入门案例</a><h4 id="1、MyBatis简介"><a href="#1、MyBatis简介" class="headerlink" title="1、MyBatis简介"></a><span id="title1">1、MyBatis简介</span></h4><h5 id="1-1-MyBatis概述"><a href="#1-1-MyBatis概述" class="headerlink" title="1.1 MyBatis概述"></a>1.1 MyBatis概述</h5>MyBatis是一款用Java编写的优秀的持久层框架，封装了JDBC 操作的很多细节，同时使用了ORM思想实现了结果集的封装，几乎避免了所有的 JDBC 代码、手动设置参数以及获取结果集。<br>MyBatis可以使用简单的 XML 或注解来配置和映射原生信息，将接口和 Java对象映射成数据库中的记录，使开发者只需要关注sql语句本身，而无需关注注册驱动，创建连接等繁杂过程。<blockquote>
<ol>
<li>框架：<br>它是我们软件开发中的一套解决方案，不同的框架解决的是不同的问题<br>使用框架的好处：<br>框架封装了很多的细节，使开发者可以使用极简的方式实现功能。大大提高开发效率。</li>
<li>三层架构<br>表现层：用于展示数据<br>业务层：处理业务需求<br>持久层：和数据库交互</li>
<li>ORM（Object Relational Mappging 对象关系映射）<br>简单地说，就是把数据库表和实体类及实体类的属性对应起来，让我们可以操作实体类就实现操作数据库表。</li>
</ol>
</blockquote>
</li>
</ol>
<h5 id="1-2-持久层技术解决方案"><a href="#1-2-持久层技术解决方案" class="headerlink" title="1.2 持久层技术解决方案"></a>1.2 持久层技术解决方案</h5><p>既然MyBatis是一种持久层的框架，那就不妨看看一些其他的持久层技术，瞧一瞧MyBatis的横向竞品，分别看看它们都有什么特点。</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>介绍</th>
<th>特点</th>
</tr>
</thead>
<tbody><tr>
<td>JDBC</td>
<td>是Java语言中用来规范客户端程序如何来访问数据库的应用程序接口</td>
<td>是一种最为基本的规范，使用起来十分繁琐复杂</td>
</tr>
<tr>
<td>Spring的JdbcTemplate</td>
<td>​ JdbcTemplate是Spring的一部分，是Spring对JDBC的封装，目的是使JDBC更加易于使用。</td>
<td>只是对Jdbc的简单封装，还没到框架的级别</td>
</tr>
<tr>
<td>Apache的DBUtils</td>
<td>Apache组织提供的一个对JDBC进行简单封装的开源工具类库，使用它能够简化JDBC应用程序的开发，同时也不会影响程序的性能。</td>
<td>它和Spring的JdbcTemplate很像，也是对Jdbc的简单封装，还没到框架的程度</td>
</tr>
<tr>
<td>Hibernate</td>
<td>这个名字应该就比较响亮了，大名鼎鼎的SSH中的H，一个开放源代码的对象关系映射框架，对JDBC进行了非常轻量级的对象封装同时可以自动生成SQL语句，自动执行，使得Java程序员可以随心所欲的使用对象编程思维来操纵数据库。</td>
<td>批量数据处理时有弱势</td>
</tr>
<tr>
<td>MyBatis</td>
<td><a href="#title1">上面说了，就不在此赘述了。</a></td>
<td>门槛低，入手快等（其他的一些特点，尤其是是和Hibernate的对比因为我能力有限这里就不多介绍了，有兴趣的同学可以去网上自行了解一下。）</td>
</tr>
</tbody></table>
<blockquote>
<p>提示：<br>SSH是Struts+Spring+Hibernate的一个集成框架，之前较为流行，但是已经逐渐被SSM（Spring+SpringMVC+MyBatis）取代了。（这也是为什么我会来学习MyBatis的原因哈哈哈）</p>
</blockquote>
<h4 id="2、环境搭建"><a href="#2、环境搭建" class="headerlink" title="2、环境搭建"></a><span id="title2">2、环境搭建</span></h4><h5 id="2-1-安装MySQL"><a href="#2-1-安装MySQL" class="headerlink" title="2.1 安装MySQL"></a>2.1 安装MySQL</h5><p>因为我看的这个B站的教程是用的MySQL，所以我也使用的MySQL，没什么要说的安装就OK了，但是一定一定一定记住密码（血淋淋的教训）！</p>
<h5 id="2-2-创建数据库和表"><a href="#2-2-创建数据库和表" class="headerlink" title="2.2 创建数据库和表"></a>2.2 创建数据库和表</h5><p><img src="https://img-blog.csdnimg.cn/2020061721042212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="user表设计"><br><img src="https://img-blog.csdnimg.cn/20200617210624569.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="user表数据"></p>
<h5 id="2-3-创建maven工程"><a href="#2-3-创建maven工程" class="headerlink" title="2.3 创建maven工程"></a>2.3 创建maven工程</h5><p>不要选Create from archetype<br><img src="https://img-blog.csdnimg.cn/20200617210742254.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="创建maven工程"><br>GroupID：域名倒着写<br>ArtifactID：我就比着视频上写的  <code>day01_eesy_01mybatis</code><br><img src="https://img-blog.csdnimg.cn/20200617210855369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="创建maven工程"><br>然后一直Next，最后Finish就OK了，进入工程后再配置一下pom.xml，如下所示：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;project xmlns=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span><br><span class="line">         xmlns:xsi=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">         xsi:schemaLocation=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line">    &lt;groupId&gt;com.garlicgo&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;day01_eesy_01mybatis&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;packaging&gt;jar&lt;/packaging&gt;</span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.mybatis&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mybatis&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;3.5.4&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;8.0.19&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;log4j&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;log4j&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.2.17&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;4.13&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure>
<h5 id="2-3-创建实体类和dao的接口"><a href="#2-3-创建实体类和dao的接口" class="headerlink" title="2.3 创建实体类和dao的接口"></a>2.3 创建实体类和dao的接口</h5><p>目录层级<br><img src="https://img-blog.csdnimg.cn/2020061721203522.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="目录层级"><br>IUserDao</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.garlicgo.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.garlicgo.domain.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">//用户的持久层接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IUserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询所有操作</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>User</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.garlicgo.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getBirthday</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> birthday;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBirthday</span><span class="params">(Date birthday)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.birthday = birthday;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSex</span><span class="params">(String sex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(String address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"User&#123;"</span> +</span><br><span class="line">                <span class="string">"id="</span> + id +</span><br><span class="line">                <span class="string">", username='"</span> + username + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", birthday="</span> + birthday +</span><br><span class="line">                <span class="string">", sex='"</span> + sex + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", address='"</span> + address + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="2-4-创建配置文件"><a href="#2-4-创建配置文件" class="headerlink" title="2.4 创建配置文件"></a>2.4 创建配置文件</h5><p>主配置文件：SqlMapConifg.xml</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;!DOCTYPE configuration</span><br><span class="line">        PUBLIC <span class="string">"-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line">        <span class="string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span><br><span class="line">&lt;!-- mybatis主配置文件--&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;!-- 配置环境--&gt;</span><br><span class="line">    &lt;environments <span class="keyword">default</span>=<span class="string">"mysql"</span>&gt;</span><br><span class="line">        &lt;!-- 配置mysql的环境--&gt;</span><br><span class="line">        &lt;environment id=<span class="string">"mysql"</span>&gt;</span><br><span class="line">            &lt;!-- 配置事务的类型--&gt;</span><br><span class="line">            &lt;transactionManager type="jdbc"&gt;&lt;/transactionManager&gt;</span><br><span class="line">            &lt;!-- 配置数据源（连接池）--&gt;</span><br><span class="line">            &lt;dataSource type=<span class="string">"POOLED"</span>&gt;</span><br><span class="line">                &lt;!-- 配置链接数据库的四个基本信息--&gt;</span><br><span class="line">                &lt;property name=<span class="string">"driver"</span> value=<span class="string">"com.mysql.cj.jdbc.Driver"</span>/&gt;</span><br><span class="line">                &lt;property name=<span class="string">"url"</span> value=<span class="string">"jdbc:mysql://localhost:3306/eesy_mybatis?serverTimezone=GMT"</span>/&gt;</span><br><span class="line">                &lt;property name=<span class="string">"username"</span> value=<span class="string">"root"</span>/&gt;</span><br><span class="line">                &lt;property name=<span class="string">"password"</span> value=<span class="string">"123456"</span>/&gt;</span><br><span class="line">            &lt;/dataSource&gt;</span><br><span class="line">        &lt;/environment&gt;</span><br><span class="line">    &lt;/environments&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 指定映射配置文件的位置，映射配置文件指的是每个dao独立的配置文件--&gt;</span><br><span class="line">    &lt;mappers&gt;</span><br><span class="line">        &lt;mapper resource=<span class="string">"com/garlicgo/dao/IUserDao.xml"</span>/&gt;</span><br><span class="line">    &lt;/mappers&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>

<p>映射配置文件：IUserDao.xml</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">        PUBLIC <span class="string">"-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line">        <span class="string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;mapper namespace=<span class="string">"com.garlicgo.dao.IUserDao"</span>&gt;</span><br><span class="line">    &lt;!--配置查询所有  其中id不能乱写必须是dao接口中的方法  resultType写的是实体类的全路径--&gt;</span><br><span class="line">    &lt;select id=<span class="string">"findAll"</span> resultType=<span class="string">"com.garlicgo.domain.User"</span>&gt;</span><br><span class="line">        select * from user</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure>
<p>最后可以再补上一个log4j.properties，主要是为了后面测试时使用：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">### 设置###</span><br><span class="line">log4j.rootLogger = debug,stdout,D,E</span><br><span class="line"></span><br><span class="line">### 输出信息到控制抬 ###</span><br><span class="line">log4j.appender.stdout = org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.stdout.Target = System.out</span><br><span class="line">log4j.appender.stdout.layout = org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.stdout.layout.ConversionPattern = [%-<span class="number">5</span>p] %d&#123;yyyy-MM-dd HH:mm:ss,SSS&#125; method:%l%n%m%n</span><br><span class="line"></span><br><span class="line">### 输出DEBUG 级别以上的日志到=E://logs/error.log ###</span><br><span class="line">log4j.appender.D = org.apache.log4j.DailyRollingFileAppender</span><br><span class="line">log4j.appender.D.File = E:<span class="comment">//logs/log.log</span></span><br><span class="line">log4j.appender.D.Append = <span class="keyword">true</span></span><br><span class="line">log4j.appender.D.Threshold = DEBUG </span><br><span class="line">log4j.appender.D.layout = org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.D.layout.ConversionPattern = %-d&#123;yyyy-MM-dd HH:mm:ss&#125;  [ %t:%r ] - [ %p ]  %m%n</span><br><span class="line"></span><br><span class="line">### 输出ERROR 级别以上的日志到=E://logs/error.log ###</span><br><span class="line">log4j.appender.E = org.apache.log4j.DailyRollingFileAppender</span><br><span class="line">log4j.appender.E.File =E:<span class="comment">//logs/error.log </span></span><br><span class="line">log4j.appender.E.Append = <span class="keyword">true</span></span><br><span class="line">log4j.appender.E.Threshold = ERROR </span><br><span class="line">log4j.appender.E.layout = org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.E.layout.ConversionPattern = %-d&#123;yyyy-MM-dd HH:mm:ss&#125;  [ %t:%r ] - [ %p ]  %m%n</span><br></pre></td></tr></table></figure>
<h5 id="2-5-总结"><a href="#2-5-总结" class="headerlink" title="2.5 总结"></a>2.5 总结</h5><ol>
<li>第一个： 创建IUserDao.xml 和 IUserDao.java时名称是为了和我们之前的知识保持一致。在Mybatis中它把持久层的操作接口名称和映射文件也叫做：Mapper 所以：IUserDao 和 IUserMapper是一样的；</li>
<li>第二个： 在idea中创建目录的时候，它和包是不一样的 包 （Package） 在创建时：top.zoick.dao它是三级结构 目录（Directory） 在创建时：top.zoick.dao是一级目录 ，最新版应该创建全部是三级结构了；</li>
<li>第三个： mybatis的映射配置文件位置必须和dao接口的包结构相同；</li>
<li>第四个：映射配置文件的mapper标签namespace属性的取值必须是dao接口的全限定类名；</li>
<li>第五个：映射配置文件的操作配置（select），id属性的取值必须是dao接口的方法名<br>当我们遵从了第三，四，五点之后，我们在开发中就无须再写dao的实现类。<h4 id="3、入门案例"><a href="#3、入门案例" class="headerlink" title="3、入门案例"></a><span id="title3">3、入门案例</span></h4><h5 id="3-1-整体步骤"><a href="#3-1-整体步骤" class="headerlink" title="3.1 整体步骤"></a>3.1 整体步骤</h5></li>
<li>读取配置文件</li>
<li>创建SqlSessionFactory工厂</li>
<li>创建SqlSession</li>
<li>创建Dao接口的代理对象</li>
<li>执行dao中的方法</li>
<li>释放资源<h5 id="3-2-测试类"><a href="#3-2-测试类" class="headerlink" title="3.2 测试类"></a>3.2 测试类</h5></li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.garlicgo.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.garlicgo.dao.IUserDao;</span><br><span class="line"><span class="keyword">import</span> com.garlicgo.domain.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> garlicgo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/6/17 18:08</span></span><br><span class="line"><span class="comment"> * mybatis的入门案例</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//入门案例</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.读取配置文件</span></span><br><span class="line">        InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConifg.xml"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.创建SqlSessionFactory工厂</span></span><br><span class="line">        SqlSessionFactoryBuilder builder = <span class="keyword">new</span> SqlSessionFactoryBuilder();</span><br><span class="line">        SqlSessionFactory factory = builder.build(in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.使用工厂生产SqlSession对象</span></span><br><span class="line">        SqlSession session = factory.openSession();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.使用SqlSession创建Dao接口的代理对象</span></span><br><span class="line">        IUserDao userDao = session.getMapper(IUserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.使用代理对象执行方法</span></span><br><span class="line">        List&lt;User&gt; users = userDao.findAll();</span><br><span class="line">        <span class="keyword">for</span> (User user: users) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//6.释放资源</span></span><br><span class="line">        session.close();</span><br><span class="line">        in.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>SSM学习笔记</category>
        <category>MyBatis系统拓荒笔记</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>MyBatis</tag>
        <tag>SSM</tag>
        <tag>持久层</tag>
        <tag>框架</tag>
      </tags>
  </entry>
  <entry>
    <title>对“鸿蒙”的一点看法</title>
    <url>/z_post/%E5%AF%B9%E2%80%9C%E9%B8%BF%E8%92%99%E2%80%9D%E7%9A%84%E4%B8%80%E7%82%B9%E7%9C%8B%E6%B3%95/</url>
    <content><![CDATA[<p>四月刚刚准备搞一搞Android，五月一开工，结果十几号就来了这么一茬子事。加之社会上对于Android开发的风言风语，不禁让我这个没见过什么世面的大学生在角落里ssfd，一定要好好研究一下这件事情的来龙去脉。<br>在这个过程中发现很多媒体夸大其词，误导读者，于是就来说说我的理解，也算当个笔记吧。</p>
<a id="more"></a>


<table>
<thead>
<tr>
<th>#</th>
<th>本文将从以下几个方面来谈一下我的看法（纯属个人观点）：</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>华为手机究竟还能不能用Android系统？</td>
</tr>
<tr>
<td>2</td>
<td>Google对华为的限制及影响</td>
</tr>
<tr>
<td>3</td>
<td>摆在华为面前的选择</td>
</tr>
</tbody></table>
<h5 id="1-华为手机究竟还能不能继续使用Android系统？"><a href="#1-华为手机究竟还能不能继续使用Android系统？" class="headerlink" title="1. 华为手机究竟还能不能继续使用Android系统？"></a>1. 华为手机究竟还能不能继续使用Android系统？</h5><blockquote>
<p>答案是能。<br>这里大家可能会产生疑问：Android不是Google的吗？既然Google已经停止和华为的业务，为什么华为还能继续使用Android？其实是因为Android是开源的，而Google停止的是与华为之间除了开源以外的一切业务，所以华为仍然可以继续使用Android（关于Google的限制细节会在第2点里面展开说）。</p>
</blockquote>
<blockquote>
<p>到这里可能大家就又要问了：既然可以Android是开源的，为什么还要费那么大精力自研操作系统？关于这一点呢会在第3点里面仔细说一下。这里主要是觉得这两个问题比较普遍，就单独拉在前面提一下了。</p>
</blockquote>
<h5 id="2-Google对华为的限制及影响"><a href="#2-Google对华为的限制及影响" class="headerlink" title="2. Google对华为的限制及影响"></a>2. Google对华为的限制及影响</h5><blockquote>
<p>5月17日华为海思总裁致内部员工的一份信在网上曝光，芯片备胎刚刚转正，结果路透社就又传来消息：Google 已经停止与华为之间除了开源以外的一切业务。报道还指出华为将无法获取最新的 Android 版本操作系统，并且 Google 将不再对华为提供任何技术支持。<br>芯片、操作系统，被国内企业极力避开的两座大山，一下子全部压在了华为肩上。一时间舆情舆论也随之此起彼落。<br>下面就详细说一下Google在各方面对华为做出的限制。</p>
</blockquote>
<table>
<thead>
<tr>
<th>Q</th>
<th>禁令对华为以前的用户有影响吗？</th>
</tr>
</thead>
<tbody><tr>
<td>A</td>
<td>谷歌官网已经声明，会为已经售出的华为（荣耀）产品提供服务，所以无论国内外已售出的华为（荣耀）产品不会受到影响。</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>Q</th>
<th>对华为以后的用户会有影响吗？</th>
</tr>
</thead>
<tbody><tr>
<td>A</td>
<td>这个首先要看具体的时间。虽然禁令已经颁布，但是有<strong>90天的缓冲期</strong>（缓冲期过后是8月21日）。所以在缓冲期最后期限之前发布的手机是不会受到影响的。对于这个期限之后发布的手机，这个还要看是国内还是国外市场，对于国内用户没有太大的影响，因为华为及中国多数厂商使用的是基于<strong>Android开源项目</strong>（<strong>简称AOSP</strong>）的，这个AOSP是由谷歌牵头，大量厂商共同参与的一个项目，这个部分不完全归由谷歌控制，华为可以继续使用，并且这个禁令主要禁止的是<strong>谷歌服务（谷歌翻译、谷歌地图、谷歌搜索等）</strong>，所以对国内用户的日常使用不会有太大的影响；但是对于国外购买的华为手机的用户就会有影响了，因为禁令意味着购买华为设备的外国友人们将无法再使用谷歌服务。这就意味着，国外的手机无法安装类似于国内<strong>有道词典、bilibili、微信、高德地图、支付宝</strong>这种高频使用软件，这样在国外市场上华为手机就基本上变成了一部功能机了。</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>Q</th>
<th>华为是否还可获得Android系统的更新</th>
</tr>
</thead>
<tbody><tr>
<td>A</td>
<td>答案是<strong>可以获得</strong>。前文已经提过，Android是属于谷歌开源项目的，所以华为仍可以使用Android系统，但是只有等谷歌将最新版本的Android系统上传给AOSP之后，华为才可使用最新版本的Android系统。不过 AOSP 是要等谷歌放出才能用的，如果华为只能用 AOSP ，只能排在后面才能获得最新源代码。此外华为还会失去早日进行Android新版本发布前的适配以及Google对合作厂家的手机进行功能优化的机会。</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>Q</th>
<th>华为自主研发移动操作系统的必要性（此条内容摘自某公众号）</th>
</tr>
</thead>
<tbody><tr>
<td>A</td>
<td>总有人说安卓是“<strong>伪开源</strong>”。因为<strong>谷歌对安卓系统开源项目(AOSP)的内容不断减少</strong>，使之不能完整地实现一些基本功能；同时<strong>谷歌还对闭源的谷歌移动服务(GMS)不断进行扩充</strong>，增加复杂度，使得独立开发者耗费大量的时间和资源；此外谷歌<strong>对试图使用安卓系统的OEM（原始设备制造商）进行了严格的约束</strong>，这些限制越来越严。谷歌对OEM要求必须加入开放手机联盟(Open Handset Alliance or OHA)。虽然名字好听，但是OHA并不开放，这里谷歌定义了严格的手机硬件标准特别提一下，OHA的执照有严格的排他性。加入OHA的厂家不能随便使用其他基于AOSP的操作系统。在2012年宏碁试图生产载有阿里云操作系统的手机，被谷歌残酷地压迫这种情况下，虽然最终用户是手机厂家的客户，谷歌却间接控制了客户关系。对于不听话的手机厂家，谷歌可以立刻吊销其OHA执照使得该厂家一夜之间丧失所有客户。<strong>这是一种赤裸裸的绑架和要挟。但是这种压迫非常迅速、非常有效，无论多么成功的手机厂家，可以一夜之间所有的生意都被威胁到。这就可以把商业和政治直接联系起来，甚至成为贸易战谈判的筹码。对于华为来说，自主研发移动操作系统是打破谷歌控制的唯一途径。</strong></td>
</tr>
</tbody></table>
<h5 id="3-摆在华为面前的选择"><a href="#3-摆在华为面前的选择" class="headerlink" title="3. 摆在华为面前的选择"></a>3. 摆在华为面前的选择</h5><pre><code>现在华为的面前基本上只剩下了两个选择：
 一个是继续以AOSP为基础，实现类似GMS的功能； 
 另一个是另起炉灶，做一个自己的操作系统。
显然，华为选择了后者。</code></pre><blockquote>
<p>对于国内市场，因为我们国内对于谷歌应用（即GMS）并没有像美国那样庞大的需求，此时又是中美贸易局势愈发紧张，民情高涨，所以个人认为应该会有不少公司和开发者去给鸿蒙做适配，因此鸿蒙在国内市场的道路应该是可以走得通的。<br>但海外市场的变数就非常大了，以美国用户为例，他们必须要用谷歌服务，而且不一定有人来给你去做应用、做适配，这会让华为手机用起来十分不方便，就跟功能机一样。<br>所以不妨就想一想，在此时，外国消费者还有什么理由去选择华为？</p>
</blockquote>
<p>|  写到最后 |<br>|–|–|<br>|  此时再回想一下华为海思总裁致内部员工的一份信，<strong>不得不为华为高管们的高瞻远瞩喝彩</strong>，接连两天芯片的禁令以及谷歌套件的授权，这两座大山，华为全都抗住了。在中美贸易局势愈发紧张的今天，这时候华为宣布自研操作系统，也是给自己和外界一个信心。<br>但“打江山容易，守江山难”；<strong>做操作系统容易，做生态难</strong>。在塞班（Symbian）、黑莓（BlackBerry）、WP（Windows Phone）等诸多互联网前辈频频失利后，华为操作系统真的能做起来吗？我不敢盲目吹捧，但真心祝福。 |</p>
]]></content>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>实用小技术：Excel+网易邮箱处理VCF与CSV文件批量添加联系人</title>
    <url>/z_post/%E5%AE%9E%E7%94%A8%E5%B0%8F%E6%8A%80%E6%9C%AF%EF%BC%9AExcel+%E7%BD%91%E6%98%93%E9%82%AE%E7%AE%B1%E5%A4%84%E7%90%86VCF%E4%B8%8ECSV%E6%96%87%E4%BB%B6%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0%E8%81%94%E7%B3%BB%E4%BA%BA/</url>
    <content><![CDATA[<p>Excel+网易邮箱处理VCF与CSV文件批量添加联系人，简直不要太轻松。</p>
<p><img src="https://img-blog.csdnimg.cn/20200205170408676.png" alt="CSV、VCF文件截图"></p>
<a id="more"></a>

<h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><ul>
<li>VCF与CSV文件简单介绍（真的是“简单”介绍）</li>
<li>为什么选择网易邮箱？（网易与QQ邮箱的简单对比）</li>
<li>利用Excel+网易邮箱生成CSV与VCF文件</li>
<li>利用网易邮箱解决CSV与VCF文件的乱码问题</li>
</ul>
<p><strong>一、VCF与CSV文件简单介绍</strong></p>
<p>VCF是通讯录导出的一种格式，CSV是以纯文本形式存储表格数据的文件格式，其后缀名分别是.vcf、.csv。</p>
<blockquote>
<p>百度百科：<a href="https://baike.baidu.com/item/VCF/22542907" target="_blank" rel="noopener">VCF</a>    、<a href="https://baike.baidu.com/item/CSV/10739?fr=aladdin" target="_blank" rel="noopener">CSV</a></p>
</blockquote>
<p>看不懂？没关系。说实话我到现在都不知道我写的什么，只是为了高逼格地开个头，它们都能够存储跟联系人相关的信息。但是手机通信录和电脑通信录中的联系方式只能用VCF导入，同时也可以生成VCF文件。而一般的邮箱通信录（比如网易邮箱通信录、QQ邮箱通信录）既可以使用VCF导入联系方式，也可以使用CSV，同时也能生成这两种文件。</p>
<p>通过上图.csv的图标就可以看出，CSV文件是可以使用Excel打开的，长这个样子：<br><img src="https://img-blog.csdnimg.cn/20200205170200547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="Excel打开CSV文件">但是VCF文件就比较复杂了，不可以使用Excel打开，用记事本打开是这个样子的：<br><img src="https://img-blog.csdnimg.cn/20200205170650198.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="记事本打开VCF文件"><br>说了这么多，其实只是为了说明下面这个关系：<br><img src="https://img-blog.csdnimg.cn/20200205170759677.png" alt="关系图"></p>
<ul>
<li>手机、电脑通信录：只能识别VCF文件，不能识别CSV文件，并且可以生成（导出）VCF文件。</li>
<li>VCF文件：可以通过通信录生成（导出）、也可以通过邮箱通信录生成（导出）。当然还有其他别的方式。</li>
<li>网易邮箱：可以识别VCF和CSV文件，也可以生成（导出）VCF和CSV文件。</li>
<li>CSV文件：可以导入邮箱通信录，也可以使用Excel打开，同时也可以使用邮箱通信录和Excel生成。</li>
<li>Excel：可以打开、生成（导出）CSV文件。</li>
</ul>
<p><strong>二、为什么选择网易邮箱？（网易与QQ邮箱的简单对比）</strong></p>
<p>其实网易邮箱可以做的事情，QQ也同样能做。下面说一下我自己使用起来两者的优点。<br>|名称| 优点 |<br>|–|–|<br>| 网易邮箱 |  ①导入快，是真的快，几百人的VCF文件网易也就几秒，QQ邮箱得老半天；②当CSV文件字段内容和网易邮箱字段不同时会给提示。|<br>| QQ邮箱 | ①可以使用QQ登录，对我来说更方便。 |</p>
<p><strong>三、利用Excel+网易邮箱生成CSV与VCF文件</strong></p>
<p>1.获得CSV文件，并添加信息重新导入</p>
<ul>
<li>利用网易邮箱获取</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/202002052027219.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="网易邮箱导出联系人"><br>点击网易邮箱通信录右侧的“导入导出→导出通信录”：↑<br><img src="https://img-blog.csdnimg.cn/20200205202910371.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="导出CSV"><br>选择CSV格式即可获得一份CSV格式文件，然后打开文件在字段中添加内容：↑↓<br><img src="https://img-blog.csdnimg.cn/20200205203122487.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>将添加信息后的CSV文件保存，重新打开网易邮箱，点击“导入导出→从文件导入通信录”：↓<br><img src="https://img-blog.csdnimg.cn/20200205203341393.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择好文件导入指定分组即可：↓<br><img src="https://img-blog.csdnimg.cn/20200205203451401.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li>利用Excel获取</li>
</ul>
<p>除了利用邮箱导出字段较为完整的CSV文件，利用Excel也可以自己创建一些比较简单CSV文件，并添加一些数据。<br><img src="https://img-blog.csdnimg.cn/2020020522092685.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>新建一个Excel表格，然后添加两个字段（姓名，手机），然后添加一些内容：↑<br><img src="https://img-blog.csdnimg.cn/20200205221031217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="另存为CSV"><br>然后另存为“CSV(逗号分隔)(*.csv)”，即可生成一个CSV文件（可导入邮箱通信录）：↑</p>
<p>2.获得VCF文件，并将联系人导入手机、电脑通信录</p>
<ul>
<li>利用网易邮箱获取</li>
</ul>
<p>与利用网易邮箱获取CSV文件一样，点击网易邮箱通信录右侧的“导入导出→导出通信录”：↓<br><img src="https://img-blog.csdnimg.cn/20200205221359502.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="导出VCF"><br>然后将生成的文件发送给手机，使用手机通信录打开即可：↓<br><img src="https://img-blog.csdnimg.cn/20200205221536306.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>四、利用网易邮箱解决CSV与VCF文件的乱码问题</strong></p>
<p>其实除了上述的方式，有一种专门用来编辑VCF文件的软件叫做VCF Editor（如下图）：<br><img src="https://img-blog.csdnimg.cn/20200205173948361.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>但是有些VCF文件用VCF Editor打开（或者CSV用Excel打开）会出现乱码的情况，如下图：<br><img src="https://img-blog.csdnimg.cn/20200205174103808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>此时只是打开的VCF的字符集的问题，把出现上述问题的VCF文件导入网易邮箱通信录是不会出现乱码的。只需要导入邮箱通信录，再使用邮箱生成VCF文件，新生成的VCF文件就不会出现乱码问题了。</p>
]]></content>
      <tags>
        <tag>VCF</tag>
      </tags>
  </entry>
  <entry>
    <title>鼠标右键没有【用管理员身份运行命令行】时的解决办法</title>
    <url>/z_post/%E9%BC%A0%E6%A0%87%E5%8F%B3%E9%94%AE%E6%B2%A1%E6%9C%89%E3%80%90%E7%94%A8%E7%AE%A1%E7%90%86%E5%91%98%E8%BA%AB%E4%BB%BD%E8%BF%90%E8%A1%8C%E5%91%BD%E4%BB%A4%E8%A1%8C%E3%80%91%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
    <content><![CDATA[<p>今天碰到了一个情况，要用管理员身份去执行一些指令。<br>但是我右键点击某个文件或者文件夹时，没有“用管理员身份运行”这个选项，而且网上的某些做法在window10家庭版上并不可行，那该怎么办呢？</p>
<a id="more"></a>

<p>最后发现，搜索“命令提示符”，再右键点击“以管理员身份运行”，之后再切换到指定目录就行了。<br><img src="https://img-blog.csdnimg.cn/20200616134428913.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjM2MzYw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
</search>
